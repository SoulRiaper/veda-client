import _ from"./defaults.js";import c from"./BackendError.js";import{timeout as u}from"./Util.js";export default class s{static#e;#i;user;expires;base;constructor(t=_.base){if(s.#e)return s.#e;this.base=t,s.#e=this}#a(t){this.#i=t.id,this.user=t.user_uri,this.expires=Math.floor((t.end_time-621355968e9)/1e4)}async authenticate(t,i,e){const a={method:"POST",url:"/authenticate",data:{login:t,password:i,secret:e}};return this.#t(a).then(this.#a.bind(this))}async get_ticket_trusted(t){const i={method:"GET",url:"/get_ticket_trusted",ticket:this.#i,data:{login:t}};return console.log(i),this.#t(i).then(this.#a.bind(this))}async is_ticket_valid(){const t={method:"GET",url:"/is_ticket_valid",ticket:this.#i};return this.#t(t)}async logout(){const t={method:"GET",url:"/logout",ticket:this.#i};return this.#t(t)}async get_rights(t,i){const e={method:"GET",url:"/get_rights",ticket:this.#i,data:{uri:t,user_id:i}};return this.#t(e)}async get_rights_origin(t){const i={method:"GET",url:"/get_rights_origin",ticket:this.#i,data:{uri:t}};return this.#t(i)}async get_membership(t){const i={method:"GET",url:"/get_membership",ticket:this.#i,data:{uri:t}};return this.#t(i)}async get_operation_state(t,i){const e={method:"GET",url:"/get_operation_state",data:{module_id:t,wait_op_id:i}};return this.#t(e)}async wait_module(t,i,e=10){return e?(await u(250*(10-e)),await this.get_operation_state(t,i)<i?this.wait_module(t,i,--e):!0):!1}async query(t,i,e,a,n,r,o,d=10){if(!d)throw new c(429);const m=typeof t=="object",l={method:"POST",url:"/query",ticket:this.#i,data:m?{...t}:{queryStr:t,sort:i,databases:e,top:a,limit:n,from:r,sql:o}};return this.#t(l).catch(async h=>{if(h.code===999)return await u(1e3),this.query(t,i,e,a,n,r,o,--d);throw h})}async get_individual(t,i=!0){const e={method:"GET",url:"/get_individual",ticket:this.#i,data:{uri:t,...!i&&{vsn:Date.now()}}};return this.#t(e)}async get_individuals(t){const i={method:"POST",url:"/get_individuals",ticket:this.#i,data:{uris:t}};return this.#t(i)}async remove_individual(t){const i={method:"PUT",url:"/remove_individual",ticket:this.#i,data:{uri:t}};return this.#t(i)}async put_individual(t){const i={method:"PUT",url:"/put_individual",ticket:this.#i,data:{individual:t}};return this.#t(i)}async add_to_individual(t){const i={method:"PUT",url:"/add_to_individual",ticket:this.#i,data:{individual:t}};return this.#t(i)}async set_in_individual(t){const i={method:"PUT",url:"/set_in_individual",ticket:this.#i,data:{individual:t}};return this.#t(i)}async remove_from_individual(t){const i={method:"PUT",url:"/remove_from_individual",ticket:this.#i,data:{individual:t}};return this.#t(i)}async put_individuals(t){const i={method:"PUT",url:"/put_individuals",ticket:this.#i,data:{individuals:t}};return this.#t(i)}async#t(t){const i=new URL(t.url,this.base);if(t.method==="GET"&&t.data){for(const a in t.data)typeof t.data[a]>"u"&&delete t.data[a];i.search=new URLSearchParams(t.data).toString()}t.ticket&&i.searchParams.append("ticket",t.ticket);const e=await fetch(i,{method:t.method,mode:"same-origin",cache:"no-cache",credentials:"same-origin",...t.method!=="GET"&&{headers:{"Content-Type":"application/json"},...t.data&&{body:JSON.stringify(t.data)}}});if(e.ok)return e.json();throw new c(e.status)}}
