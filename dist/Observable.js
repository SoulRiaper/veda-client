import{diff as d}from"deep-object-diff";import{decorator as h}from"./Util.js";import l from"./ObserverArray.js";const b={get:function(e,t,i){const r=Reflect.get(e,t,i);return typeof r=="function"?r.bind(e):r},set:function(e,t,i,r){return e.emit(t,i),e.emit("modified",t,i),Array.isArray(i)?(e[t]=new l(e,t,...i),!0):Reflect.set(e,t,i,r)},deleteProperty:function(e,t){if(t in e)return delete e[t],e.emit(t),e.emit("modified",t),!0}};function m(e){let t={};e.on=function(i,r){return typeof r=="function"&&i.replace(/[^\s]+/g,(c,o)=>{t[c]=t[c]||[],t[c].push(r),r.typed=o>0}),e},e.off=function(i,r){return i==="*"?t={}:r?i.replace(/[^\s]+/g,c=>{t[c]&&(t[c]=t[c].filter(o=>o!==r))}):i.replace(/[^\s]+/g,c=>{t[c]=[]}),e},e.one=e.once=function(i,r){return r&&(r.one=!0),e.on(i,r)},e.trigger=e.emit=function(i,...r){const c=t[i]||[];let o=0;return c.reduce((n,f,s)=>n.then(()=>(f.one&&(c.splice(s-o,1),o++),f.apply(this,f.typed?[i].concat(r):r))),Promise.resolve()).then(()=>this)}}export default e=>{class t extends e{constructor(...n){return super(...n),this.on&&this.off&&this.trigger||m(this),new Proxy(this,b)}}function i(o){let n;function f(){n=this.toJSON()}function s(){const y=this.toJSON(),p=d(y,n);Object.keys(p).forEach(u=>{this.emit(u,this[u]),this.emit("modified",u,this[u])})}return h(o,f,s,console.error)}function r(o){async function n(){const s=this.toJSON();await this.emit("before"+o.name,s)}async function f(){const s=this.toJSON();await this.emit("after"+o.name,s)}return h(o,n,f,console.error)}function c(o){o&&(o.setters&&o.setters.forEach(n=>{t.prototype[n]=t.prototype.hasOwnProperty(n)?t.prototype[n]:i(o.prototype[n])}),o.actions&&o.actions.forEach(n=>{t.prototype[n]=t.prototype.hasOwnProperty(n)?t.prototype[n]:r(o.prototype[n])}),c(o.prototype))}return c(e),t};
