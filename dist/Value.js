import i from"./ObservableModel.js";export default class e{constructor(t,r=null,n=null){if(typeof t<"u"&&r!==null)this.data=t,this.type=r,n&&(this.lang=n.toUpperCase());else if(r===null&&typeof t=="object"&&"data"in t&&"type"in t)this.data=t.data,this.type=t.type,t.lang&&(this.lang=t.lang.toUpperCase());else return e.serialize(t)}static parse(t){if(t.type==="String"&&t.data)return`${t.data}${t.lang&&t.lang!=="NONE"?`^^${t.lang}`:""}`;if(t.type==="Uri")return new i(t.data);if(t.type==="Datetime")return new Date(Date.parse(t.data));if(t.type==="Decimal")return parseFloat(t.data);if(t.type==="Integer")return parseInt(t.data);if(t.type==="Boolean")return!!t.data}static reg_uri=/^[a-z][a-z-0-9]*:([a-zA-Z0-9-_])*$/;static reg_date=/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d{3})?Z$/;static reg_ml_string=/^(.*)\^\^([a-z]{2})$/ims;static reg_round_decimal=/^-?\d+([\.\,])0$/;static serialize(t){if(typeof t=="number")return new e(t,Number.isInteger(t)?"Integer":"Decimal");if(typeof t=="boolean")return new e(t,"Boolean");if(t instanceof Date)return new e(t.toISOString().split(".")[0]+"Z","Datetime");if(t instanceof i)return new e(t.id,"Uri");if(typeof t=="string"||t instanceof String){if(e.reg_uri.test(t))return new e(t.valueOf(),"Uri");if(e.reg_date.test(t))return new e(t.valueOf().split(".")[0]+"Z","Datetime");if(e.reg_ml_string.test(t))return new e(t.replace(e.reg_ml_string,"$1"),"String",t.replace(e.reg_ml_string,"$2").toUpperCase());if(e.reg_round_decimal.test(t))return new e(parseFloat(t),"Decimal");if(t.length)return new e(t.valueOf(),"String",t.language)}else if(typeof t=="object")return new e(t)}static areEqual(t,r){return t.data===r.data&&t.type===r.type&&t.lang===r.lang}isEqual(t){return e.areEqual(this,t)}}
